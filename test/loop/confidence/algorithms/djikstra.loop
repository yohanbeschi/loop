# Recursive functional Djikstra's BFS graph search algorithm.

find(node, goal, path) =>
  [ linked <- node.adjacent ], *, *  : (if linked.contains(goal)
                                        then path + [node.name]
                                        else (find(i, goal, path + [node.name]) for i in linked))

main ->
  goal: [ 'name': 'goal', 'adjacent' : [] ],
  root: [ 'name': 'root',
          'adjacent' : [{ 'name': 'a',
                          'adjacent' : [goal] }] ],
  find(root, goal, [])[0]
