<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.looplang</groupId>
  <artifactId>loop</artifactId>
  <packaging>jar</packaging>
  <version>1.0</version>

  <repositories>
    <repository>
      <id>codehaus</id>
      <url>http://repository.codehaus.org</url>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
    <jdk.version>1.8</jdk.version>

    <!--+== Versions ==+-->
    <!-- Dependencies -->
    <asm.version>4.0</asm.version>
    <jline.version>2.6</jline.version>
    <junit.version>4.12</junit.version>

    <!-- Plugins -->
    <maven-clean-plugin.version>2.6.1</maven-clean-plugin.version>
    <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
    <gmaven-plugin.version>1.5</gmaven-plugin.version>
    <maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
    <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
    <maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>${asm.version}</version>
    </dependency>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>${asm.version}</version>
    </dependency>

    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>${jline.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins> <!-- in maven lifecycle order-->

      <!-- http://maven.apache.org/plugins/maven-clean-plugin/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven-clean-plugin.version}</version>
      </plugin>

      <!-- http://maven.apache.org/plugins/maven-resources-plugin/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>${project.build.resourceEncoding}</encoding>
        </configuration>
      </plugin>

      <!-- http://docs.codehaus.org/display/GMAVEN/Home -->
      <!-- Obsolete plugin, but does the job as intended -->
      <!--
        We want to execute a shell command to get the abbreviate hash
        of the last commit and set the result into a property (githash)
        accessible from the assembly plugin
      -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>${gmaven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <properties>
                <script>git rev-parse --short HEAD</script>
              </properties>
              <source>
                def command = project.properties.script
                def process = command.execute()
                process.waitFor()
                def githash = process.in.text.trim()
                project.properties.setProperty('githash', githash)
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- http://maven.apache.org/plugins/maven-compiler-plugin/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding> <!-- Default, but does no harm -->
        </configuration>
      </plugin>

      <!-- http://maven.apache.org/surefire/maven-surefire-plugin/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>

      <!-- http://maven.apache.org/plugins/maven-jar-plugin/ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
      </plugin>

      <!-- http://maven.apache.org/plugins/maven-assembly-plugin/ -->
      <!--
            Package 'loop' with its dependencies.
            We get a warning as 'install' and 'deploy' phases will
            take the generated jar as the main one to deploy it in a
            local/remote binary repository.
            NOT THE END OF THE WORLD (for now at least...)
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <mainClass>loop.Loop</mainClass>
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <assemblyId>final</assemblyId>
          <appendAssemblyId>false</appendAssemblyId> <!-- Warning because of this -->
          <finalName>loop.${project.version}-${githash}</finalName>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
